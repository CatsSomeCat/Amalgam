name: MSBuild CI/CD

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]
  
  # This enables manual builds with configurable options
  workflow_dispatch:
    inputs:
      include-symbols-with-binaries:
        description: 'Include PDB files with binary artifacts (in addition to separate symbols)'
        type: boolean
        default: false
      upload-complete-output:
        description: 'Upload complete build output directory'
        type: boolean
        default: true

# Set shorter timeout for faster feedback (default is 6 hours)
jobs:
  msbuild:
    timeout-minutes: 30
    runs-on: windows-latest
    
    # Cache NuGet packages to speed up subsequent builds
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      
    strategy:
      matrix:
        configuration: [Release, ReleaseAVX2, ReleaseFreetype, ReleaseFreetypeAVX2]
        # Add more platforms if needed: [x64, x86, ARM64]
        platform: [x64]
      
      # Don't fail entire build if one configuration fails
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch full history for better versioning
        fetch-depth: 0

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ${{ env.NUGET_PACKAGES }}
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/packages.config') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore NuGet packages
      run: nuget restore Amalgam.sln
      
    - name: Build solution
      run: |
        msbuild Amalgam.sln `
          /p:Platform=${{ matrix.platform }} `
          /p:Configuration=${{ matrix.configuration }} `
          /p:ContinuousIntegrationBuild=true `
          /p:Deterministic=true `
          /verbosity:minimal `
          /nodeReuse:false
      # Additional flags for better CI experience:
      # - ContinuousIntegrationBuild: Optimizations for CI
      # - Deterministic: Reproducible builds
      # - nodeReuse: false: Cleaner resource management

    # Create organized directory structure for different artifact types
    - name: Prepare artifact directories
      run: |
        # Create directories for different artifact categories
        mkdir -p artifacts/binaries/${{ matrix.platform }}/${{ matrix.configuration }}
        mkdir -p artifacts/symbols/${{ matrix.platform }}/${{ matrix.configuration }}
        
        # Copy binaries (executables and libraries) to binaries directory
        copy output\${{ matrix.platform }}\${{ matrix.configuration }}\*.exe artifacts\binaries\${{ matrix.platform }}\${{ matrix.configuration }}\
        copy output\${{ matrix.platform }}\${{ matrix.configuration }}\*.dll artifacts\binaries\${{ matrix.platform }}\${{ matrix.configuration }}\
        copy output\${{ matrix.platform }}\${{ matrix.configuration }}\*.config artifacts\binaries\${{ matrix.platform }}\${{ matrix.configuration }}\
        
        # Copy symbol files to symbols directory
        copy output\${{ matrix.platform }}\${{ matrix.configuration }}\*.pdb artifacts\symbols\${{ matrix.platform }}\${{ matrix.configuration }}\

    # Upload binary artifacts (DLLs, EXEs) - configurable to include symbols
    - name: Upload binary artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Binaries-${{ matrix.platform }}-${{ matrix.configuration }}-${{ github.run_number }}
        path: |
          artifacts/binaries/${{ matrix.platform }}/${{ matrix.configuration }}/
          # Conditionally include symbols if requested via workflow input
          ${{ github.event.inputs.include-symbols-with-binaries && 'artifacts/symbols/${{ matrix.platform }}/${{ matrix.configuration }}/' || '' }}
        retention-days: 7
        # Compression reduces upload and download times and storage usage
        compression-level: 9

    # Always upload symbols as separate artifact for debugging purposes
    - name: Upload symbol files
      uses: actions/upload-artifact@v4
      with:
        name: Symbols-${{ matrix.platform }}-${{ matrix.configuration }}-${{ github.run_number }}
        path: artifacts/symbols/${{ matrix.platform }}/${{ matrix.configuration }}/
        retention-days: 30
        # Symbols benefit from compression but use moderate level for balance
        compression-level: 6

    # Optional: Upload complete build output for comprehensive access
    - name: Upload complete build output
      if: ${{ github.event.inputs.upload-complete-output == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: Complete-${{ matrix.platform }}-${{ matrix.configuration }}-${{ github.run_number }}
        path: output/${{ matrix.platform }}/${{ matrix.configuration }}/
        retention-days: 3
        # Complete output may be large, use higher compression
        compression-level: 9

    # Additional step: Create and upload checksums for verification
    - name: Create checksums for binaries
      run: |
        cd artifacts/binaries/${{ matrix.platform }}/${{ matrix.configuration }}
        Get-FileHash -Algorithm SHA256 * | Format-List | Out-File -FilePath checksums.sha256
      shell: pwsh

    - name: Upload checksums
      uses: actions/upload-artifact@v4
      with:
        name: Checksums-${{ matrix.platform }}-${{ matrix.configuration }}-${{ github.run_number }}
        path: artifacts/binaries/${{ matrix.platform }}/${{ matrix.configuration }}/checksums.sha256
        retention-days: 7
